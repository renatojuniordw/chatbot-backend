'use strict';
const _0x4a9d4a = _0x427b;
(function (_0x12c398, _0x6580e1) {
    const _0x21896e = _0x427b, _0x10ed4b = _0x12c398();
    while (!![]) {
        try {
            const _0x53d5b8 = -parseInt(_0x21896e(0x1c4)) / (-0x1 * 0x611 + -0x1 * -0x1558 + 0x30e * -0x5) + -parseInt(_0x21896e(0x1c3)) / (0x1c8c + -0x6 * 0x229 + -0xf94) + parseInt(_0x21896e(0x1c1)) / (0x1f * -0x8e + -0x47 * 0x29 + 0x1c94) * (parseInt(_0x21896e(0x1ce)) / (0x6ba + -0x577 + -0xb * 0x1d)) + parseInt(_0x21896e(0x1cd)) / (-0x232 * -0xb + -0x8 * -0x1aa + -0xf * 0x27f) + -parseInt(_0x21896e(0x1d7)) / (-0x1823 + 0x585 + -0x2 * -0x952) * (parseInt(_0x21896e(0x1c6)) / (-0x103d + -0x2 * 0xf0b + 0x2e5a)) + -parseInt(_0x21896e(0x1d2)) / (-0x11b * -0x2 + -0x12fc + -0x3 * -0x59a) * (-parseInt(_0x21896e(0x1be)) / (0xe9 * 0x13 + 0x2331 + 0x1d * -0x1cf)) + -parseInt(_0x21896e(0x1c5)) / (-0x1 * 0x167 + 0x118 + 0x59) * (-parseInt(_0x21896e(0x1ca)) / (0x6e3 + 0x115 * 0xd + -0x14e9 * 0x1));
            if (_0x53d5b8 === _0x6580e1)
                break;
            else
                _0x10ed4b['push'](_0x10ed4b['shift']());
        } catch (_0x2a0e7a) {
            _0x10ed4b['push'](_0x10ed4b['shift']());
        }
    }
}(_0x4460, 0x6712 + 0x4cc8e + 0xe87a));
var __importDefault = this && this[_0x4a9d4a(0x1d1) + _0x4a9d4a(0x1d6)] || function (_0x5b40a7) {
    const _0x32abdf = _0x4a9d4a;
    return _0x5b40a7 && _0x5b40a7[_0x32abdf(0x1d4)] ? _0x5b40a7 : { 'default': _0x5b40a7 };
};
const _0x4eb30e = {};
function _0x427b(_0xbe5b80, _0x499955) {
    const _0x2c5eb9 = _0x4460();
    return _0x427b = function (_0x25cd11, _0x53b731) {
        _0x25cd11 = _0x25cd11 - (0x1c * -0x73 + -0x1547 + 0x2398);
        let _0x5d2ed6 = _0x2c5eb9[_0x25cd11];
        return _0x5d2ed6;
    }, _0x427b(_0xbe5b80, _0x499955);
}
_0x4eb30e[_0x4a9d4a(0x1c0)] = !![], Object[_0x4a9d4a(0x1c2) + _0x4a9d4a(0x1cc)](exports, _0x4a9d4a(0x1d4), _0x4eb30e);
function _0x4460() {
    const _0x441ec7 = [
        '4395XEhmBV',
        'defineProp',
        '726676ryPIGr',
        '710616lvfXTf',
        '50ObTTQA',
        '7LykXJR',
        '../../erro',
        'N_FOUND',
        'update',
        '3537875DcBJct',
        'rs/AppErro',
        'erty',
        '904915nclUmW',
        '88tvOWkm',
        'ERR_NO_PLA',
        'default',
        '__importDe',
        '808HzgJOv',
        'findByPk',
        '__esModule',
        'XdUvO',
        'fault',
        '3857424tSgpnS',
        'ls/Plan',
        '26370KwsOsn',
        '../../mode',
        'value'
    ];
    _0x4460 = function () {
        return _0x441ec7;
    };
    return _0x4460();
}
const AppError_1 = __importDefault(require(_0x4a9d4a(0x1c7) + _0x4a9d4a(0x1cb) + 'r')), Plan_1 = __importDefault(require(_0x4a9d4a(0x1bf) + _0x4a9d4a(0x1bd))), UpdatePlanService = async _0x12d52e => {
        const _0x523cf8 = _0x4a9d4a, _0x233b07 = {};
        _0x233b07[_0x523cf8(0x1d5)] = _0x523cf8(0x1cf) + _0x523cf8(0x1c8);
        const _0x2dfd0f = _0x233b07, {
                id: _0x42acab,
                name: _0x13f686,
                users: _0x4f7479,
                connections: _0x56f6be,
                queues: _0x156588,
                value: _0x4a6d33
            } = _0x12d52e, _0x4466b5 = await Plan_1[_0x523cf8(0x1d0)][_0x523cf8(0x1d3)](_0x42acab);
        if (!_0x4466b5)
            throw new AppError_1[(_0x523cf8(0x1d0))](_0x2dfd0f[_0x523cf8(0x1d5)], -0x5bb * -0x6 + -0x5e9 + -0x1ae5 * 0x1);
        return await _0x4466b5[_0x523cf8(0x1c9)](_0x12d52e), _0x4466b5;
    };
exports[_0x4a9d4a(0x1d0)] = UpdatePlanService;